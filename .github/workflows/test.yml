name: Test

on:
  push:
    branches:
      - main
  pull_request:

permissions: {}

env:
  STAGING_PYX_UPLOAD_URL: https://astral-sh-staging-api.pyx.dev/v1/upload/pyx-auth-action/main
  # most tests use the staging API.
  GHA_PYX_INPUT_INTERNAL_API_BASE: https://astral-sh-staging-api.pyx.dev
  PYX_API_URL: https://astral-sh-staging-api.pyx.dev

jobs:
  unit:
    name: "Test: unit tests"
    runs-on: ubuntu-latest
    permissions:
      contents: read # for private repos

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: setup uv
        uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # v7.0.0

      - run: make test

  selftest-exchange-only-index:
    name: "Test: ensure that token exchange works with the `index` input"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Create a dummy pyproject.toml with publish-url
        run: |
          cat <<EOF >> pyproject.toml

          [[tool.uv.index]]
          name = "main"
          url = "https://astral-sh-staging-api.pyx.dev/simple/pyx-auth-action/main"
          publish-url = "https://astral-sh-staging-api.pyx.dev/v1/upload/pyx-auth-action/main"
          explicit = true
          EOF

      - uses: ./
        id: auth
        with:
          index: main

  selftest-exchange-only-upload-url:
    name: "Test: ensure that token exchange works with the `url` input"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: ./
        id: auth
        with:
          url: ${{ env.STAGING_PYX_UPLOAD_URL }}

      - name: assert output URL is correct
        run: |
          if [ "${OUTPUT_URL}" != "${STAGING_PYX_UPLOAD_URL}" ]; then
            echo "Expected output URL to be '${STAGING_PYX_UPLOAD_URL}', got '${OUTPUT_URL}'"
            exit 1
          fi
        env:
          OUTPUT_URL: ${{ steps.auth.outputs.url }}
          STAGING_PYX_UPLOAD_URL: ${{ env.STAGING_PYX_UPLOAD_URL }}

  selftest-exchange-only-workspace:
    name: "Test: ensure that token exchange works with the `workspace` and `registry` inputs"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: ./
        id: auth
        with:
          workspace: pyx-auth-action
          registry: main

  selftest-exchange-only-workspace-default-registry:
    name: "Test: ensure that token exchange works with the `workspace` input and default registry"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: ./
        id: auth
        with:
          workspace: pyx-auth-action

  selftest-inputs-index-no-publish-url-xfail:
    name: "Test: expect failure when using `index` input but configured index has no publish-url"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Create a dummy pyproject.toml without publish-url
        run: |
          cat <<EOF >> pyproject.toml

          [[tool.uv.index]]
          name = "main"
          url = "https://astral-sh-staging-api.pyx.dev/simple/pyx-auth-action/main"
          explicit = true
          EOF

      - name: Expect failure when index has no publish-url
        uses: ./
        id: auth
        continue-on-error: true
        with:
          index: main

      - name: Check failure
        run: |
          if [ "${OUTCOME}" != "failure" ]; then
            echo "Expected failure, got '${OUTCOME}'"
            exit 1
          fi
        env:
          OUTCOME: ${{ steps.auth.outcome }}

  selftest-inputs-mutex-xfail:
    name: "Test: expect failure when both `url` and `workspace`/`registry` are provided"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Expect failure when both URL and workspace/registry are provided
        uses: ./
        id: auth
        continue-on-error: true
        with:
          url: ${{ env.STAGING_PYX_UPLOAD_URL }}
          workspace: pyx-auth-action
          registry: main

      - name: Check failure
        run: |
          if [ "${OUTCOME}" != "failure" ]; then
            echo "Expected failure, got '${OUTCOME}'"
            exit 1
          fi
        env:
          OUTCOME: ${{ steps.auth.outcome }}

  selftest-publish-e2e:
    name: "Test: end-to-end publish using the action to get a token"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: fetch temporary uv
        uses: dawidd6/action-download-artifact@v11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo: astral-sh/uv
          workflow: ci.yml
          pr: 16234
          name: "uv-linux-libc-.+"
          name_is_regexp: true

      - name: Add uv to PATH
        run: |
          which uv
          ls
          echo "${CWD}" >> ${GITHUB_PATH}

      # - name: setup uv
      #   uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # v7.0.0

      - uses: ./
        id: auth
        with:
          url: ${{ env.STAGING_PYX_UPLOAD_URL }}

      - name: Checkout sampleproject
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: pypa/sampleproject
          path: sampleproject
          persist-credentials: false

      - name: Prep sampleproject
        working-directory: sampleproject
        run: |
          stamp=$(date +%s)
          rand=$(od -A n -t u -N 3 /dev/urandom | tr -d ' ')
          version="4.0.${stamp}.${rand}"

          # Replace the version in pyproject.toml
          sed -i "s/^version = \".*\"/version = \"${version}\"/" pyproject.toml

      - name: Build and publish package
        run: |
          uv build
          uv publish
        working-directory: sampleproject
        env:
          UV_PUBLISH_URL: ${{ steps.auth.outputs.url }}
          UV_PUBLISH_TOKEN: ${{ steps.auth.outputs.token }}

  selftest-publish-e2e-workspace-default-registry:
    name: "Test: end-to-end publish using the action with `workspace` input and default registry"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: fetch temporary uv
        uses: dawidd6/action-download-artifact@v11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo: astral-sh/uv
          workflow: ci.yml
          pr: 16234
          name: "uv-linux-libc-.+"
          name_is_regexp: true

      - name: Add uv to PATH
        run: |
          which uv
          ls
          echo "${CWD}" >> ${GITHUB_PATH}

      # - name: setup uv
      #   uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # v7.0.0

      - uses: ./
        id: auth
        with:
          workspace: pyx-auth-action

      - name: Checkout sampleproject
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: pypa/sampleproject
          path: sampleproject
          persist-credentials: false

      - name: Prep sampleproject
        working-directory: sampleproject
        run: |
          stamp=$(date +%s)
          rand=$(od -A n -t u -N 3 /dev/urandom | tr -d ' ')
          version="4.0.${stamp}.${rand}"

          # Replace the version in pyproject.toml
          sed -i "s/^version = \".*\"/version = \"${version}\"/" pyproject.toml

      - name: Build and publish package
        run: |
          uv build
          uv publish
        working-directory: sampleproject
        env:
          UV_PUBLISH_URL: ${{ steps.auth.outputs.url }}
          UV_PUBLISH_TOKEN: ${{ steps.auth.outputs.token }}

  selftest-publish-e2e-production:
    name: "Test: end-to-end publish against production pyx"
    if: |-
      ${{
          github.event.pull_request.head.repo.full_name == 'astral-sh/pyx-auth-action' ||
          github.event_name == 'push'
       }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write # for testing the action itself
      contents: read # for private repos

    environment: test

    env:
      GHA_PYX_INPUT_INTERNAL_API_BASE: https://api.pyx.dev
      PYX_API_URL: https://api.pyx.dev

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: fetch temporary uv
        uses: dawidd6/action-download-artifact@v11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo: astral-sh/uv
          workflow: ci.yml
          pr: 16234
          name: "uv-linux-libc-.+"
          name_is_regexp: true

      - name: Add uv to PATH
        run: |
          which uv
          ls
          echo "${CWD}" >> ${GITHUB_PATH}

      # - name: setup uv
      #   uses: astral-sh/setup-uv@eb1897b8dc4b5d5bfe39a428a8f2304605e0983c # v7.0.0

      - uses: ./
        id: auth
        with:
          workspace: astral-test
          registry: main

      - name: Checkout sampleproject
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: pypa/sampleproject
          path: sampleproject
          persist-credentials: false

      - name: Prep sampleproject
        working-directory: sampleproject
        run: |
          stamp=$(date +%s)
          rand=$(od -A n -t u -N 3 /dev/urandom | tr -d ' ')
          version="4.0.${stamp}.${rand}"

          # Replace the version in pyproject.toml
          sed -i "s/^version = \".*\"/version = \"${version}\"/" pyproject.toml

      - name: Build and publish package
        run: |
          uv build
          uv publish
        working-directory: sampleproject
        env:
          UV_PUBLISH_URL: ${{ steps.auth.outputs.url }}
          UV_PUBLISH_TOKEN: ${{ steps.auth.outputs.token }}

  all-tests-pass:
    name: "Ensure all selftests pass"
    if: always()

    needs:
      - unit
      - selftest-exchange-only-index
      - selftest-exchange-only-upload-url
      - selftest-exchange-only-workspace-default-registry
      - selftest-exchange-only-workspace
      - selftest-inputs-index-no-publish-url-xfail
      - selftest-inputs-mutex-xfail
      - selftest-publish-e2e
      - selftest-publish-e2e-workspace-default-registry
      - selftest-publish-e2e-production

    runs-on: ubuntu-latest

    steps:
      - name: Ensure all selftests passed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
